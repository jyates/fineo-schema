// Schemas for managing schemas in an organization
//
// The top level protocol is merely a wrapper to use the IDL.
// The parts we care about are the actual record instances
//
// The layering and instance/schema is a bit round about, but allows us to dynamically rename both
// the metric types and the fields in a metric instance because they are actually stored under a
// canonical name. We cannot use the Avro alias for records b/c it does not support full string
// names.

@namespace("io.fineo.internal.customer")
protocol Organization {
  import idl "fineo-common.avdl";

  // Metadata about a metric in an org
  record OrgMetricMetadata {
    // other keys besides 'metrictype' to identify the metric
    union{null, array<string>} aliasKeys = null;
    // values that indicate the record belongs to this metric (aka. aliases for the canonical name)
    array<string> aliasValues;
    // name that the metric should be displayed as. This is just one of the aliases
    string displayName;
  }

  // track the metric that was deleted
  record Gravestone {
    long deadtime = 0;
    OrgMetricMetadata metric;
  }

  // old metrics that we deleted but need to avoid reads on because they might have data.
  record Graveyard {
    map<Gravestone> deadMetrics;
  }

  // Metadata about an organization
  record OrgMetadata {
    Metadata metadata;

    // helper record to map a canonical name to a number of aliases
    union {null, map<OrgMetricMetadata>} metrics = null;

    union {null,Graveyard} graveyard = null;
  }
}
